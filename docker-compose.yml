version: '3.8'

services:
  sql_server:
    image: mcr.microsoft.com/mssql/server
    container_name: sql_server
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Enosis123!
    volumes:
      - "D:/PersonalProjects/FriendsBook/MSSqlVolumes/Vol 1/data:/var/opt/mssql/data"
      - "D:/PersonalProjects/FriendsBook/MSSqlVolumes/Vol 1/log:/var/opt/mssql/log"
      - "D:/PersonalProjects/FriendsBook/MSSqlVolumes/Vol 1/secrets:/var/opt/mssql/secrets"
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "8080:15672"
      - "5672:5672"
    volumes:
      - "D:/PersonalProjects/FriendsBook/RabbitMQVolumes/Vol 1/data:/var/lib/rabbitmq"
    networks:
      - my_network

  userservice:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    image: userservice
    container_name: friendsbook.userservice
    ports:
      - "6080:80"
      - "6443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings:UserDB=Server=sql_server;Database=UserDB;Encrypt=False;User Id=sa;Password=Enosis123!;
    volumes:
      - ./UserService/logs:/app/logs
    depends_on:
      - sql_server
      - rabbitmq
    networks:
      - my_network

  postservice:
    build:
      context: ./PostService
      dockerfile: Dockerfile
    image: postservice
    container_name: friendsbook.postservice
    restart: always
    ports:
      - "9080:80"
      - "9443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings:PostDB=Server=sql_server;Database=PostDB;Encrypt=False;User Id=sa;Password=Enosis123!;
      - MicroServiceUrls:UserServiceUrl=http://userservice:80/
    volumes:
      - ./PostService/logs:/app/logs
    depends_on:
      - sql_server
      - rabbitmq
      - userservice
    networks:
      - my_network
      
  frontendservice:
    build:
      context: ./FrontendService
      dockerfile: Dockerfile
    image: frontendservice
    container_name: friendsbook.frontendservice
    ports:
      - "7080:80"
      - "7443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings:PostDB=Server=sql_server;Database=PostDB;Encrypt=False;User Id=sa;Password=Enosis123!;
      - ApplicationUrl=http://frontendservice:80/
    volumes:
      - ./FrontendService/logs:/app/logs
    depends_on:
      - userservice
      - postservice
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
